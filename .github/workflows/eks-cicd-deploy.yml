name: eks-cicd-deploy

on:
  workflow_call:
    inputs:
      service_name:
        required: true
        type: string
    secrets:
      AWS_KEY:
        required: true
      AWS_SECRET:
        required: true

jobs:
  build-and-deploy-service:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: "v1.25.9"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET }}
          aws-region: ap-northeast-2

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --name omnimfa-cluster --region ap-northeast-2

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          REGISTRY: 246233007938.dkr.ecr.ap-northeast-2.amazonaws.com
          REPOSITORY: ${{ inputs.service_name }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG -f ./Dockerfile ./${{ inputs.service_name }}
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      - name: Deploy to Amazon EKS
        env:
          REGISTRY: 246233007938.dkr.ecr.ap-northeast-2.amazonaws.com
          REPOSITORY: ${{ inputs.service_name }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          sed -i "s|image:.*|image: $REGISTRY/$REPOSITORY:$IMAGE_TAG|g" ./${{ inputs.service_name }}/k8s/depl-svc.yml
          kubectl apply -f ./${{ inputs.service_name }}/k8s/depl-svc.yml
